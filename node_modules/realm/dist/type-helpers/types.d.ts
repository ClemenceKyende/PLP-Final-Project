import type { ClassHelpers, ObjCreator, PresentationPropertyTypeName, Realm, UpdateMode, binding } from "../internal";
/** @internal */
export type TypeHelpers<T = unknown> = {
    toBinding(value: T, options?: {
        createObj?: ObjCreator;
        updateMode?: UpdateMode;
        isQueryArg?: boolean;
    }): binding.MixedArg;
    fromBinding(value: unknown): T;
};
/** @internal */
export type TypeOptions = {
    realm: Realm;
    name: string;
    optional: boolean;
    objectType: string | undefined;
    objectSchemaName: string | undefined;
    presentation?: PresentationPropertyTypeName;
    getClassHelpers(nameOrTableKey: string | binding.TableKey): ClassHelpers;
};
